// This is template generated by CPCLI [https://github.com/ericliclair/cpcli]
// problem link [https://leetcode.com/problems/find-the-duplicate-number/]

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vector<int>> vvi;

// O(N) O(1)
class Solution
{
public:
    int findDuplicate(vector<int> &nums)
    {
        for (const int &n : nums)
        {
            if (nums[abs(n)] < 0)
                return abs(n);
            else
            {
                nums[abs(n)] *= -1;
            }
        }
        return -1;
    }
};

int main()
{
    cout << "Hey champ!";

    // other approaches:
    // 1. sort and check for two consecutive equal numbers O(NlogN) O(1)
    // 2. store the count of occurences of each number O(N) O(N)

    return 0;
}