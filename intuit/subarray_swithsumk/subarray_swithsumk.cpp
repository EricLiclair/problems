// This is template generated by CPCLI [https://github.com/ericliclair/cpcli]

// NOTE: Includes negative values A sliding window can not be as the values as shrinking or expanding doesn't always imply increase or decrease in sum

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vector<int>> vvi;

class Solution
{
public:
    int findSubArraySum(vi &arr, int n, int k)
    {
        int count = 0;
        int currSum = 0;
        unordered_map<int, int> prefix;
        prefix[0] = 1;

        for (const int &num : arr)
        {
            currSum += num;
            count += prefix[currSum - k];
            prefix[currSum] += 1;
        }

        return count;
    }
};

int main()
{
    cout << "Hey champ!";
    return 0;
}