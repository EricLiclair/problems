// This is template generated by CPCLI [https://github.com/ericliclair/cpcli]
// problem link

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vector<int>> vvi;

class Solution
{
public:
    int lengthOfLongestSubstring(string s)
    {
        int left = 0;
        int right = 0;
        int len = 0;

        map<char, int> store;

        while (right < s.length())
        {
            char ch = s[right];
            if (store.find(ch) != store.end())
            {
                // already existing character
                left = max(left, store[ch] + 1);
            }

            store[ch] = right;
            len = max(len, right - left + 1);
            right++;
        }

        return len;
    }
};

int main()
{
    string s;
    cin >> s;

    cout << Solution().lengthOfLongestSubstring(s) << endl;
}