// This is template generated by CPCLI [https://github.com/ericliclair/cpcli]
// problem link [https://leetcode.com/problems/best-time-to-buy-and-sell-stock/]

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vector<int>> vvi;

class Solution
{
private:
    vi largestOnRight(vi &arr)
    {
        vi res(arr.size());
        res[arr.size() - 1] = arr[arr.size() - 1];
        for (int i = arr.size() - 2; i >= 0; i--)
        {
            res[i] = max(res[i + 1], arr[i]);
        }

        return res;
    }

public:
    int maxProfit(vector<int> &prices)
    {
        vi lor = largestOnRight(prices);
        int maxi = 0;
        for (int i = 0; i < prices.size(); i++)
        {
            maxi = max(maxi, lor[i] - prices[i]);
        }

        return maxi;
    }
};

int main()
{
    int n;
    cin >> n;
    vi prices(n);
    for (int i = 0; i < n; i++)
    {
        cin >> prices[i];
    }
    cout << Solution().maxProfit(prices) << endl;
    return 0;
}