// This is template generated by CPCLI [https://github.com/ericliclair/cpcli]

#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vector<int>> vvi;

int damagedDragons(vi &vals)
{
    int count = 0;
    // each dragon from 1-vals[4] should be checked to be divisible from vals[0-3]
    for (int i = 1; i <= vals[4]; i++)
    {
        if ((i % vals[0] == 0) || (i % vals[1] == 0) || (i % vals[2] == 0) || (i % vals[3] == 0))
        {
            count++;
        }
    }
    return count;
}

int main()
{
    vi vals(5);
    // k l m n d
    for (int i = 0; i < 5; i++)
    {
        cin >> vals[i];
    }
    cout << damagedDragons(vals) << endl;
    return 0;
}